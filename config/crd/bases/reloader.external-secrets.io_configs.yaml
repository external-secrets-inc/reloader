---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.1
  name: configs.reloader.external-secrets.io
spec:
  group: reloader.external-secrets.io
  names:
    kind: Config
    listKind: ConfigList
    plural: configs
    singular: config
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Config is the Schema for the reloader config API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ConfigSpec defines the desired state of a Reloader Config
            properties:
              destinationsToWatch:
                description: DestinationsToWatch specifies which secrets the controller
                  should monitor.
                items:
                  description: DestinationToWatch specifies the criteria for monitoring
                    secrets in the cluster.
                  properties:
                    deployment:
                      description: |-
                        Defines a DeploymentDestination. Behavior is a pod templates annotations patch.
                        Default UpdateStrategy is pod template annotations patch to trigger a new rollout.
                        Default MatchStrategy is matching secret-key with any of:
                        * Equality against `spec.template.spec.containers[*].env[*].valueFrom.secretKeyRef.name`
                        * Equality against `spec.template.spec.containers[*].envFrom.secretRef.name`
                        Default WaitStrategy is to wait for the rollout to be completed with 3 minutes of grace period before
                        moving to the next matched deployment.
                      properties:
                        labelSelectors:
                          description: |-
                            LabelSelectors selects resources based on their labels.
                            The resource must satisfy all conditions defined in this selector.
                            Supports both matchLabels and matchExpressions for advanced filtering.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        names:
                          description: |-
                            Names specifies a list of resource names to watch.
                            The resource must have a name that matches one of these entries.
                          items:
                            type: string
                          type: array
                        namespaceSelectors:
                          description: |-
                            NamespaceSelectors selects namespaces based on labels.
                            The manifest must reside in a namespace that matches at least one of these selectors.
                          items:
                            description: |-
                              A label selector is a label query over a set of resources. The result of matchLabels and
                              matchExpressions are ANDed. An empty label selector matches all objects. A null
                              label selector matches no objects.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          type: array
                      type: object
                    externalSecret:
                      description: |-
                        Defines an ExternalSecretDestination. Behavior is an annotations patch.
                        Default UpdateStrategy is annotations patch to trigger externalSecret reconcile.
                        Default MatchStrategy is matching secret-key with any of:
                        * Equality against `spec.data.remoteRef.key`
                        * Equality against `spec.dataFrom.remoteRef.key`
                        * Regexp against `spec.dataFrom.find.name.regexp`
                      properties:
                        labelSelectors:
                          description: |-
                            LabelSelectors selects resources based on their labels.
                            The resource must satisfy all conditions defined in this selector.
                            Supports both matchLabels and matchExpressions for advanced filtering.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        names:
                          description: |-
                            Names specifies a list of resource names to watch.
                            The resource must have a name that matches one of these entries.
                          items:
                            type: string
                          type: array
                        namespaceSelectors:
                          description: |-
                            NamespaceSelectors selects namespaces based on labels.
                            The manifest must reside in a namespace that matches at least one of these selectors.
                          items:
                            description: |-
                              A label selector is a label query over a set of resources. The result of matchLabels and
                              matchExpressions are ANDed. An empty label selector matches all objects. A null
                              label selector matches no objects.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          type: array
                      type: object
                    matchStrategy:
                      description: MatchStrategy. If not specified, will use each
                        destinations' default match strategy.
                      properties:
                        conditions:
                          items:
                            properties:
                              operation:
                                type: string
                              value:
                                type: string
                            required:
                            - operation
                            - value
                            type: object
                          type: array
                        path:
                          type: string
                      required:
                      - conditions
                      - path
                      type: object
                    pushSecret:
                      properties:
                        labelSelectors:
                          description: |-
                            LabelSelectors selects resources based on their labels.
                            The resource must satisfy all conditions defined in this selector.
                            Supports both matchLabels and matchExpressions for advanced filtering.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector
                                requirements. The requirements are ANDed.
                              items:
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector
                                      applies to.
                                    type: string
                                  operator:
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                    items:
                                      type: string
                                    type: array
                                    x-kubernetes-list-type: atomic
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                              x-kubernetes-list-type: atomic
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                          x-kubernetes-map-type: atomic
                        names:
                          description: |-
                            Names specifies a list of resource names to watch.
                            The resource must have a name that matches one of these entries.
                          items:
                            type: string
                          type: array
                        namespaceSelectors:
                          description: |-
                            NamespaceSelectors selects namespaces based on labels.
                            The manifest must reside in a namespace that matches at least one of these selectors.
                          items:
                            description: |-
                              A label selector is a label query over a set of resources. The result of matchLabels and
                              matchExpressions are ANDed. An empty label selector matches all objects. A null
                              label selector matches no objects.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: |-
                                    A label selector requirement is a selector that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: |-
                                        operator represents a key's relationship to a set of values.
                                        Valid operators are In, NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: |-
                                        values is an array of string values. If the operator is In or NotIn,
                                        the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                        the values array must be empty. This array is replaced during a strategic
                                        merge patch.
                                      items:
                                        type: string
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                                x-kubernetes-list-type: atomic
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                  map is equivalent to an element of matchExpressions, whose key field is "key", the
                                  operator is "In", and the values array contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                            x-kubernetes-map-type: atomic
                          type: array
                      type: object
                    type:
                      description: Type specifies the type of destination to watch.
                      enum:
                      - ExternalSecret
                      - Deployment
                      - PushSecret
                      type: string
                    updateStrategy:
                      description: UpdateStrategy. If not specified, will use each
                        destinations' default update strategy.
                      properties:
                        operation:
                          type: string
                        patchOperationConfig:
                          description: Required if Operation == Patch
                          properties:
                            path:
                              type: string
                            template:
                              type: string
                          required:
                          - path
                          - template
                          type: object
                      required:
                      - operation
                      type: object
                    waitStrategy:
                      description: WaitStrategy. If not specified, will use each destinations's
                        default wait strategy.
                      properties:
                        condition:
                          description: Waits for a given status condition to be met
                          properties:
                            maxRetries:
                              description: Maximum retries to check for a condition
                              format: int32
                              type: integer
                            message:
                              description: Optional message to match
                              type: string
                            reason:
                              description: Optional reason to match
                              type: string
                            retryTimeout:
                              description: Period to wait before each retry
                              type: string
                            status:
                              description: The status of the condition to wait for
                              type: string
                            transitionedAfter:
                              description: Only accept this condition after a given
                                period from the transition time
                              type: string
                            type:
                              description: The name of the condition to wait for
                              type: string
                            updatedAfter:
                              description: Only accept this condition after a given
                                period from the update time
                              type: string
                          required:
                          - type
                          type: object
                        time:
                          description: Waits for a given time interval to reconcile
                            the next object
                          type: string
                      type: object
                  required:
                  - type
                  type: object
                type: array
              notificationSources:
                description: NotificationSources specifies the notification systems
                  to listen to.
                items:
                  description: NotificationSource represents a notification system
                    configuration.
                  properties:
                    awsSqs:
                      description: AwsSqs configuration (required if Type is AwsSqs).
                      properties:
                        auth:
                          description: Authentication methods for AWS.
                          properties:
                            authMethod:
                              type: string
                            region:
                              type: string
                            secretRef:
                              properties:
                                accessKeyIdSecretRef:
                                  description: |-
                                    SecretKeySelector is used to reference a specific secret within a Kubernetes namespace.
                                    It contains the name of the secret and the namespace where it resides.
                                  properties:
                                    key:
                                      description: Key specifies the key within the
                                        referenced Kubernetes secret.
                                      type: string
                                    name:
                                      description: Name specifies the name of the
                                        referenced Kubernetes secret.
                                      type: string
                                    namespace:
                                      description: Namespace specifies the Kubernetes
                                        namespace where the referenced secret resides.
                                      type: string
                                  required:
                                  - key
                                  - name
                                  - namespace
                                  type: object
                                secretAccessKeySecretRef:
                                  description: |-
                                    SecretKeySelector is used to reference a specific secret within a Kubernetes namespace.
                                    It contains the name of the secret and the namespace where it resides.
                                  properties:
                                    key:
                                      description: Key specifies the key within the
                                        referenced Kubernetes secret.
                                      type: string
                                    name:
                                      description: Name specifies the name of the
                                        referenced Kubernetes secret.
                                      type: string
                                    namespace:
                                      description: Namespace specifies the Kubernetes
                                        namespace where the referenced secret resides.
                                      type: string
                                  required:
                                  - key
                                  - name
                                  - namespace
                                  type: object
                              required:
                              - accessKeyIdSecretRef
                              - secretAccessKeySecretRef
                              type: object
                            serviceAccountRef:
                              properties:
                                audiences:
                                  description: |-
                                    Audience specifies the `aud` claim for the service account token
                                    If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
                                    then this audiences will be appended to the list
                                  items:
                                    type: string
                                  type: array
                                name:
                                  description: Name specifies the name of the service
                                    account to be selected.
                                  type: string
                                namespace:
                                  description: ServiceAccountSelector represents a
                                    Kubernetes service account with a name and namespace
                                    for selection purposes.
                                  type: string
                              required:
                              - name
                              - namespace
                              type: object
                          required:
                          - authMethod
                          - region
                          type: object
                        numberOfMessages:
                          default: 10
                          description: MaxNumberOfMessages specifies the maximum number
                            of messages to retrieve from the SDK queue in a single
                            request.
                          format: int32
                          type: integer
                        queueURL:
                          description: QueueURL is the URL of the AWS SDK queue.
                          type: string
                        visibilityTimeout:
                          default: 30
                          description: VisibilityTimeout specifies the duration (in
                            seconds) that a message received from the SDK queue is
                            hidden from subsequent retrievals.
                          format: int32
                          type: integer
                        waitTimeSeconds:
                          default: 20
                          description: WaitTimeSeconds specifies the duration (in
                            seconds) to wait for messages in the SDK queue before
                            returning.
                          format: int32
                          type: integer
                      required:
                      - auth
                      - queueURL
                      type: object
                    azureEventGrid:
                      properties:
                        host:
                          type: string
                        port:
                          default: 8080
                          format: int32
                          type: integer
                        subscriptions:
                          items:
                            type: string
                          type: array
                      required:
                      - host
                      - port
                      - subscriptions
                      type: object
                    googlePubSub:
                      description: GooglePubSub configuration (required if Type is
                        GooglePubSub).
                      properties:
                        auth:
                          description: Authentication methods for Google Pub/Sub.
                          properties:
                            secretRef:
                              properties:
                                secretAccessKeySecretRef:
                                  description: The SecretAccessKey is used for authentication
                                  properties:
                                    key:
                                      description: Key specifies the key within the
                                        referenced Kubernetes secret.
                                      type: string
                                    name:
                                      description: Name specifies the name of the
                                        referenced Kubernetes secret.
                                      type: string
                                    namespace:
                                      description: Namespace specifies the Kubernetes
                                        namespace where the referenced secret resides.
                                      type: string
                                  required:
                                  - key
                                  - name
                                  - namespace
                                  type: object
                              type: object
                            workloadIdentity:
                              properties:
                                clusterLocation:
                                  type: string
                                clusterName:
                                  type: string
                                clusterProjectID:
                                  type: string
                                serviceAccountRef:
                                  properties:
                                    audiences:
                                      description: |-
                                        Audience specifies the `aud` claim for the service account token
                                        If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
                                        then this audiences will be appended to the list
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: Name specifies the name of the
                                        service account to be selected.
                                      type: string
                                    namespace:
                                      description: ServiceAccountSelector represents
                                        a Kubernetes service account with a name and
                                        namespace for selection purposes.
                                      type: string
                                  required:
                                  - name
                                  - namespace
                                  type: object
                              required:
                              - clusterLocation
                              - clusterName
                              - serviceAccountRef
                              type: object
                          type: object
                        projectID:
                          description: ProjectID is the GCP project ID where the subscription
                            exists.
                          type: string
                        subscriptionID:
                          description: SubscriptionID is the ID of the Pub/Sub subscription.
                          type: string
                      required:
                      - projectID
                      - subscriptionID
                      type: object
                    hashicorpVault:
                      description: HashicorpVault configuration (required if Type
                        is HashicorpVault).
                      properties:
                        host:
                          description: Host is the hostname or IP address to listen
                            on.
                          type: string
                        port:
                          default: 8000
                          description: Port is the port number to listen on.
                          format: int32
                          type: integer
                      required:
                      - host
                      - port
                      type: object
                    kubernetesSecret:
                      description: Kubernetes Secret watch configuration (required
                        if Type is KubernetesSecret).
                      properties:
                        auth:
                          description: How to authenticate with Kubernetes cluster.
                            If not specified, the default config is used.
                          properties:
                            caBundle:
                              description: Defines a CABundle if either TokenRef or
                                ServiceAccountRef are used.
                              type: string
                            kubeConfigRef:
                              properties:
                                secretRef:
                                  description: |-
                                    SecretKeySelector is used to reference a specific secret within a Kubernetes namespace.
                                    It contains the name of the secret and the namespace where it resides.
                                  properties:
                                    key:
                                      description: Key specifies the key within the
                                        referenced Kubernetes secret.
                                      type: string
                                    name:
                                      description: Name specifies the name of the
                                        referenced Kubernetes secret.
                                      type: string
                                    namespace:
                                      description: Namespace specifies the Kubernetes
                                        namespace where the referenced secret resides.
                                      type: string
                                  required:
                                  - key
                                  - name
                                  - namespace
                                  type: object
                              required:
                              - secretRef
                              type: object
                            serviceAccountRef:
                              properties:
                                audiences:
                                  description: |-
                                    Audience specifies the `aud` claim for the service account token
                                    If the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity
                                    then this audiences will be appended to the list
                                  items:
                                    type: string
                                  type: array
                                name:
                                  description: Name specifies the name of the service
                                    account to be selected.
                                  type: string
                                namespace:
                                  description: ServiceAccountSelector represents a
                                    Kubernetes service account with a name and namespace
                                    for selection purposes.
                                  type: string
                              required:
                              - name
                              - namespace
                              type: object
                            tokenRef:
                              properties:
                                secretRef:
                                  description: |-
                                    SecretKeySelector is used to reference a specific secret within a Kubernetes namespace.
                                    It contains the name of the secret and the namespace where it resides.
                                  properties:
                                    key:
                                      description: Key specifies the key within the
                                        referenced Kubernetes secret.
                                      type: string
                                    name:
                                      description: Name specifies the name of the
                                        referenced Kubernetes secret.
                                      type: string
                                    namespace:
                                      description: Namespace specifies the Kubernetes
                                        namespace where the referenced secret resides.
                                      type: string
                                  required:
                                  - key
                                  - name
                                  - namespace
                                  type: object
                              required:
                              - secretRef
                              type: object
                          type: object
                        serverURL:
                          description: Server URL
                          type: string
                      required:
                      - serverURL
                      type: object
                    mock:
                      description: Mock configuration (optional field for testing
                        purposes).
                      properties:
                        emitInterval:
                          format: int32
                          type: integer
                      required:
                      - emitInterval
                      type: object
                    tcpSocket:
                      description: TCPSocket configuration (required if Type is TCPSocket).
                      properties:
                        host:
                          description: Host is the hostname or IP address to listen
                            on.
                          type: string
                        identifierPathOnPayload:
                          description: |-
                            SecretIdentifierOnPayload is the key that the reloader will look for in the payload.
                            The value of this key should be the same name as in the external secret. It will default to `0.data.ObjectName` if not set
                          type: string
                        port:
                          default: 8000
                          description: Port is the port number to listen on.
                          format: int32
                          type: integer
                      required:
                      - host
                      - port
                      type: object
                    type:
                      description: Type of the notification source (e.g., AwsSqs,
                        AzureEventGrid, GooglePubSub, HashicorpVault, Webhook, TCPSocket,
                        KubernetesSecret).
                      enum:
                      - AwsSqs
                      - AzureEventGrid
                      - GooglePubSub
                      - HashicorpVault
                      - Webhook
                      - TCPSocket
                      - KubernetesSecret
                      type: string
                    webhook:
                      description: Webhook configuration (required if Type is Webhook).
                      properties:
                        address:
                          description: |-
                            Address is the address where the webhook will be served in your infrastructure.
                            If not present, defaults to `:8090`
                          type: string
                        identifierPathOnPayload:
                          description: |-
                            SecretIdentifierOnPayload is the key that the reloader will look for in the payload.
                            The value of this key should be the same name as in the external secret. It will default to `0.data.ObjectName` if not set
                          type: string
                        path:
                          description: |-
                            Path that the webhook will receive the notifications.
                            If not present `/webhook` will be used. The path always expects a POST and this is not configurable
                          type: string
                        retryPolicy:
                          description: |-
                            RetryPolicy represents the policy to retry when a message fails.
                            If it's empty, reloader will return a 4xx and won't retry.
                          properties:
                            algorithm:
                              description: |-
                                Algorithm represents how watiting time will change for each retry.
                                Currently supports "linear" and "exponential". If an invalid string or null is given, "exponential" will be used
                              type: string
                            maxRetries:
                              description: MaxRetries represents the maximum times
                                the reloader should retry to process a message. Numbers
                                greater than 10 will be ignored and 10 will be used
                                instead
                              type: integer
                          type: object
                        webhookAuth:
                          description: Auth is the authentication method for the webhook
                          properties:
                            basicAuth:
                              description: BasicAuth contains basic authentication
                                credentials.
                              properties:
                                passwordSecretRef:
                                  description: PasswordSecretRef contains a secret
                                    reference for the password
                                  properties:
                                    key:
                                      description: Key specifies the key within the
                                        referenced Kubernetes secret.
                                      type: string
                                    name:
                                      description: Name specifies the name of the
                                        referenced Kubernetes secret.
                                      type: string
                                    namespace:
                                      description: Namespace specifies the Kubernetes
                                        namespace where the referenced secret resides.
                                      type: string
                                  required:
                                  - key
                                  - name
                                  - namespace
                                  type: object
                                usernameSecretRef:
                                  description: UsernameSecretRef contains a secret
                                    reference for the username
                                  properties:
                                    key:
                                      description: Key specifies the key within the
                                        referenced Kubernetes secret.
                                      type: string
                                    name:
                                      description: Name specifies the name of the
                                        referenced Kubernetes secret.
                                      type: string
                                    namespace:
                                      description: Namespace specifies the Kubernetes
                                        namespace where the referenced secret resides.
                                      type: string
                                  required:
                                  - key
                                  - name
                                  - namespace
                                  type: object
                              required:
                              - passwordSecretRef
                              - usernameSecretRef
                              type: object
                            bearerToken:
                              description: BearerToken references a Kubernetes Secret
                                containing the bearer token.
                              properties:
                                bearerTokenSecretRef:
                                  description: BearerTokenSecretRef references a Kubernetes
                                    Secret containing the bearer token.
                                  properties:
                                    key:
                                      description: Key specifies the key within the
                                        referenced Kubernetes secret.
                                      type: string
                                    name:
                                      description: Name specifies the name of the
                                        referenced Kubernetes secret.
                                      type: string
                                    namespace:
                                      description: Namespace specifies the Kubernetes
                                        namespace where the referenced secret resides.
                                      type: string
                                  required:
                                  - key
                                  - name
                                  - namespace
                                  type: object
                              required:
                              - bearerTokenSecretRef
                              type: object
                          type: object
                      type: object
                  required:
                  - type
                  type: object
                type: array
            required:
            - destinationsToWatch
            - notificationSources
            type: object
          status:
            description: ConfigStatus defines the observed state of Reloader
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  of the resource's state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
